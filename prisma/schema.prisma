generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = " env("DATABASE_URL")"
}

// Achievement model
model Achievement {
  id          Int      @id @default(autoincrement())
  year        String
  title       String
  description String?
  url         String?  // Added optional URL field
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// Expert model
model Expert {
  id             Int      @id @default(autoincrement())
  name           String
  specialization String
  qualification  String
  experience     Int
  email          String?
  phone          String?
  bio            String?
  imageUrl       String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

// Organization Member model
model OrganizationMember {
  id        Int      @id @default(autoincrement())
  name      String
  role      String
  imageUrl  String?
  bio       String?
  order     Int      @default(0)
  startDate DateTime?
  endDate   DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Coordinator model for Student Forum
model Coordinator {
  id          Int          @id @default(autoincrement())
  name        String
  designation String
  contact     String?
  phone       String?
  fax         String?
  email       String?
  studentForum StudentForum @relation(fields: [forumId], references: [id])
  forumId     Int          @unique // One-to-one relationship
}

// Updated Student Forum model
model StudentForum {
  id                  Int          @id @default(autoincrement())
  name               String
  address            String
  website            String?
  dateOfInauguration String?
  coordinator        Coordinator?
  createdAt          DateTime     @default(now())
  updatedAt          DateTime     @updatedAt
}

// Organization Member (Company/Institution) model
model OrganizationMemberInstitute {
  id            Int      @id @default(autoincrement())
  orgId         String   @unique  // ORGI00158, ORGG00160L, etc.
  name          String
  address       String
  email         String?
  contact       String?
  contactPerson String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

// R&D Infrastructure model
model RDInfrastructure {
  id          Int      @id @default(autoincrement())
  category    String   // e.g., "Computer Lab", "Electronics Kits"
  name        String
  description String?
  specs       String?  // For detailed specifications
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// R&D Project model
model RDProject {
  id          Int      @id @default(autoincrement())
  category    String   // e.g., "EMBEDDED BASED PROJECTS", "ANDROID AND SMART PHONE BASED PROJECTS"
  title       String
  description String?
  order       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// Event model
model Event {
  id            Int      @id @default(autoincrement())
  title         String
  date          DateTime
  description   String
  imageUrl      String?
  category      String
  location      String
  isHighlighted Boolean  @default(false)
  images        EventImage[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

// Event Image model
model EventImage {
  id        Int      @id @default(autoincrement())
  url       String
  caption   String?
  event     Event    @relation(fields: [eventId], references: [id], onDelete: Cascade)
  eventId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
} 